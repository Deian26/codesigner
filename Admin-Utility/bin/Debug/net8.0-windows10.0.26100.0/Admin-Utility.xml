<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Admin-Utility</name>
    </assembly>
    <members>
        <member name="F:Admin_Utility.U0_MainForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Admin_Utility.U0_MainForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Admin_Utility.U0_MainForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Admin_Utility.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Admin_Utility.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Admin_Utility.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Admin_Utility.Security">
            <summary>
            Handles security-relevant avtions
            </summary>
        </member>
        <member name="T:Admin_Utility.Security.Token">
            <summary>
            Defines a token; fields are separeted by 'Token.FIELD_SEPARATOR'
            </summary>
        </member>
        <member name="M:Admin_Utility.Security.Token.#ctor(System.String,System.Int32)">
            <summary>
            Generates a new token which grants the specified access level
            </summary>
            <param name="accessLevel">Access to be provided by the token</param>
        </member>
        <member name="M:Admin_Utility.Security.Token.ToString">
            <summary>
            Returns the string representation of the current Token object
            </summary>
            <returns>Token string or null, if the token is invalid</returns>
        </member>
        <member name="M:Admin_Utility.Security.GenerateHash(System.String)">
            <summary>
            Generates the hash for the provided input text
            </summary>
            <param name="input">Text to be hashed</param>
            <returns>Hashed text or null</returns>
        </member>
        <member name="M:Admin_Utility.Security.GetGeneratorId(System.Boolean)">
            <summary>
            Generates the machine's generator base ID
            </summary>
            <param name="developmentToken">if true, the development generator id will be used</param>
            <returns>The machine's generator ID</returns>
        </member>
        <member name="M:Admin_Utility.Security.ToByteString(System.Byte[])">
            <summary>
            Generates and returns the byte-string corresponding to the given byte array
            </summary>
            <param name="bytes">Array to be converted</param>
            <returns>A hexadecimal string representing the input byte array</returns>
        </member>
        <member name="M:Admin_Utility.Security.GenerateToken(System.String,System.String)">
            <summary>
            Generates a new token, with the specified access level and returns its string representation
            </summary>
            <param name="accessLevel">Access to be granted</param>
            <returns>The generated token string</returns>
        </member>
        <member name="M:Admin_Utility.Security.AesDecrypt(System.String)">
            <summary>
            Decrypts the provided AES-encrypted cipher text
            </summary>
            <param name="cipherText">Encrypted data</param>
            <returns>The decrypted data, as a string</returns>
        </member>
    </members>
</doc>
